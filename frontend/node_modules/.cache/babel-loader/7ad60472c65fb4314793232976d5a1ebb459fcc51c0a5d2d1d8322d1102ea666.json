{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Embedded AI Agent\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ChatProvider } from './context/ChatContext';\nimport { healthService } from './services/api';\nimport toast from 'react-hot-toast';\n\n// Components\nimport Layout from './components/Layout';\nimport ChatInterface from './components/chat/ChatInterface';\nimport ReportDashboard from './components/reports/ReportDashboard';\nimport LoadingScreen from './components/common/LoadingScreen';\nimport ErrorBoundary from './components/common/ErrorBoundary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [healthStatus, setHealthStatus] = useState(null);\n  useEffect(() => {\n    checkHealth();\n  }, []);\n  const checkHealth = async () => {\n    try {\n      const health = await healthService.check();\n      setHealthStatus(health);\n      if (health.status !== 'OK') {\n        toast.error('Backend service is not responding properly');\n      }\n    } catch (error) {\n      console.error('Health check failed:', error);\n      setHealthStatus({\n        status: 'ERROR',\n        error: error.message\n      });\n      toast.error('Cannot connect to backend service');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(ChatProvider, {\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App min-h-screen bg-gray-50\",\n          children: /*#__PURE__*/_jsxDEV(Layout, {\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: /*#__PURE__*/_jsxDEV(ChatInterface, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/chat\",\n                element: /*#__PURE__*/_jsxDEV(ChatInterface, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 46\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/chat/:sessionId\",\n                element: /*#__PURE__*/_jsxDEV(ChatInterface, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/reports\",\n                element: /*#__PURE__*/_jsxDEV(ReportDashboard, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"*\",\n                element: /*#__PURE__*/_jsxDEV(Navigate, {\n                  to: \"/\",\n                  replace: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 42\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oS6nZ/QDJj1zd/7Se/0WkZUgZ8E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","ChatProvider","healthService","toast","Layout","ChatInterface","ReportDashboard","LoadingScreen","ErrorBoundary","jsxDEV","_jsxDEV","App","_s","isLoading","setIsLoading","healthStatus","setHealthStatus","checkHealth","health","check","status","error","console","message","fileName","_jsxFileName","lineNumber","columnNumber","children","className","path","element","to","replace","_c","$RefreshReg$"],"sources":["D:/Projects/Embedded AI Agent/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { ChatProvider } from './context/ChatContext';\r\nimport { healthService } from './services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Components\r\nimport Layout from './components/Layout';\r\nimport ChatInterface from './components/chat/ChatInterface';\r\nimport ReportDashboard from './components/reports/ReportDashboard';\r\nimport LoadingScreen from './components/common/LoadingScreen';\r\nimport ErrorBoundary from './components/common/ErrorBoundary';\r\n\r\nfunction App() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [healthStatus, setHealthStatus] = useState(null);\r\n\r\n  useEffect(() => {\r\n    checkHealth();\r\n  }, []);\r\n\r\n  const checkHealth = async () => {\r\n    try {\r\n      const health = await healthService.check();\r\n      setHealthStatus(health);\r\n      \r\n      if (health.status !== 'OK') {\r\n        toast.error('Backend service is not responding properly');\r\n      }\r\n    } catch (error) {\r\n      console.error('Health check failed:', error);\r\n      setHealthStatus({ status: 'ERROR', error: error.message });\r\n      toast.error('Cannot connect to backend service');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <ChatProvider>\r\n        <Router>\r\n          <div className=\"App min-h-screen bg-gray-50\">\r\n            <Layout>\r\n              <Routes>\r\n                <Route path=\"/\" element={<ChatInterface />} />\r\n                <Route path=\"/chat\" element={<ChatInterface />} />\r\n                <Route path=\"/chat/:sessionId\" element={<ChatInterface />} />\r\n                <Route path=\"/reports\" element={<ReportDashboard />} />\r\n                <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\r\n              </Routes>\r\n            </Layout>\r\n          </div>\r\n        </Router>\r\n      </ChatProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}